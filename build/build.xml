<?xml version="1.0"?>
<project name="Workbench" default="dist" basedir="..">
	<property name="dir.src" value="workbench"/>
	<property name="dir.src.bulkclient" value="${dir.src}/bulkclient"/>
	<property name="dir.test" value="workbench-test"/>
	<property name="dir.build" value="build"/>
	<property name="dir.build.lib" value="${dir.build}/lib"/>
	<property name="dir.dist" value="dist"/>
	
	<property name="dir.test.java" value="workbench-test/java"/>
	<property name="dir.test.java.src" value="${dir.test.java}/src"/>
	<property name="dir.test.java.bin" value="${dir.test.java}/bin"/>
	<property name="dir.test.java.lib" value="${dir.test.java}/lib"/>
	<property name="dir.test.java.results" value="${dir.test.java}/results"/>

	<path id="classpath.test.java">
        <pathelement location="${dir.test.java.bin}"/>
        <pathelement location="${dir.test.java.lib}/junit.jar"/>
        <pathelement location="${dir.test.java.lib}/selenium-java-client-driver.jar"/>
    </path>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
  		<classpath>
    		<pathelement location="${dir.build.lib}/ant-contrib-1.0b3.jar"/>
	    </classpath>
	</taskdef>
	
	<target name="init">		
		<loadfile srcfile="${dir.src}/config.php" property="app.config"/>

        <propertyregex property="app.version"
              input="${app.config}"
              regexp="\$GLOBALS\[&quot;WORKBENCH_VERSION&quot;\] = &quot;(.+)&quot;;"
              select="\1"
              casesensitive="false" />
                      
        <echo message="App Version: ${app.version}"/>
                      
        <propertyregex property="app.version.stripped"
              input="${app.version}"
              regexp="\s"
              replace="_"
              global="true"
              defaultValue="${app.version}"/>
                            
        <echo message="App Version Stripped: ${app.version.stripped}"/>
                      
        <condition property="app.beta">
	    	<contains string="${app.version}" substring="Beta"/>
		</condition>		
	</target>
	
	<target name="clean">
		<delete dir="${dir.dist}"/>
		<delete dir="${dir.test.java.bin}"/>
	</target>
	
	<target name="dist" depends="init, clean">
		<mkdir dir="${dir.dist}"/>
                      
        <property name="dist.zip.workbench" value="${dir.dist}/workbench-${app.version.stripped}.zip"/>
        
		<zip destfile="${dist.zip.workbench}" basedir="." includes="${dir.src}/**" excludes="**/*Mock*"/>
				
		<!-- Always update the latest beta version checker, but only the prod one if not a beta version -->
		<echo message="Writing latest app version (${app.version}) to latestVersionAvailableBeta.txt"/>
		<concat destfile="${dir.dist}/latestVersionAvailableBeta.txt">${app.version}</concat>
		<if>
			<isfalse value="${app.beta}"/>
			<then>
				<echo message="Writing latest app version (${app.version}) to latestVersionAvailable.txt"/>
				<concat destfile="${dir.dist}/latestVersionAvailable.txt">${app.version}</concat>	
			</then>
		</if>
		
		<property name="dist.zip.bulkclient" value="${dir.dist}/PHP_BulkApiClient-${app.version.stripped}.zip"/>

		<zip destfile="${dist.zip.bulkclient}" basedir="${dir.src.bulkclient}"/>
	</target>
	
	<target name="upload" depends="dist">
		<taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="${dir.build.lib}/ant-googlecode-0.0.2.jar" name="gcupload"/>
		
		<condition 
		        property="gc.labels" 
		        value="Beta" 
		        else="">
			<istrue value="${app.beta}"/>
		</condition>
		
		<gcupload 
				username="${gc.username}" 
				password="${gc.password}" 
				projectname="forceworkbench" 
				filename="${basedir}/${dist.zip.workbench}" 
				targetfilename="${dist.zip.workbench}"
				summary="Workbench ${app.version}"
				labels="${gc.labels}, Featured" />
				
		<gcupload 
				username="${gc.username}" 
				password="${gc.password}" 
				projectname="forceworkbench" 
				filename="${basedir}/${dist.zip.bulkclient}" 
				targetfilename="${dist.zip.bulkclient}"
				summary="PHP Bulk API Client ${app.version}"
				labels="${gc.labels}" />	
	</target>
	
	<target name="update" depends="dist">		
		<scp todir="${sf.username},forceworkbench:${sf.password}@web.sourceforge.net:/home/groups/f/fo/forceworkbench/htdocs/" verbose="true">
			<fileset dir="${dir.dist}">
				<include name="latestVersionAvailable*.txt"/>
			</fileset>
		</scp>
	</target>

	<target name="deploy" depends="upload, update"/>
	
	<target name="compileTests">
		<mkdir dir="${dir.test.java.bin}"/>
		
        <javac destdir="${dir.test.java.bin}" source="1.6" target="1.6">
            <src path="${dir.test.java.src}"/>
            <classpath refid="classpath.test.java"/>
        </javac>
	</target>
	
	<target name="startSeleniumServer">
		<java jar="${dir.test.java.lib}/selenium-server.jar" fork="true"/>
	</target>
	
	<target name="test" depends="compileTests">
		<mkdir dir="${dir.test.java.results}"/>
		
		<junit printsummary="yes">
		  <classpath refid="classpath.test.java"/>

     	  <sysproperty key="baseUrl" value="http://localhost:8888/workbench-20.0.0/workbench/"/>
		  <sysproperty key="browser" value="*firefox"/>
			
		  <formatter type="plain"/>

		  <batchtest fork="yes" todir="${dir.test.java.results}">
		    <fileset dir="${dir.test.java.src}">
		      <include name="**/*Tests.java"/>
		      <exclude name="**/BaseTest.java"/>
		    </fileset>
		  </batchtest>
		</junit>
	</target>	
</project>